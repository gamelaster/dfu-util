name: CI

on: [push, pull_request]
# On pushes to the main repo OR a pull request, we run all of the builds and upload the assets
# Also runs formatting checks and code errors on the linux host (as its usually faster to get allocated resources)

jobs:
  build-windows:
    runs-on: windows-2019
    defaults:
      run:
        shell: cmd
    steps:
      - uses: actions/checkout@v2
      - uses: lukka/get-cmake@latest
      - name: Build libusb
        run: |
          mkdir output
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          curl https://github.com/libusb/libusb/archive/refs/tags/v1.0.25.zip --output v1.0.25.zip -L
          unzip v1.0.25.zip
          rm -rf v1.0.25.zip
          cd libusb-1.0.25\msvc
          msbuild.exe libusb_dll_2019.vcxproj /p:Configuration=Release /p:Platform=x64
          cd ..\..\
          cp libusb-1.0.25\x64\Release\dll\libusb-1.0.dll output\libusb-1.0.dll
      - name: Build dfu-util
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . --target libdfu-util --config Release
          cp Release\dfu-util.dll ..\output\dfu-util.dll
      - name: Upload results
        uses: actions/upload-artifact@v2
        with:
          name: LibUSB + LibDFU-Util libraries (Windows)
          path: |
            output/libusb-1.0.dll
            output/dfu-util.dll
          if-no-files-found: error

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: lukka/get-cmake@latest
      - name: Build libusb
        run: |
          export MACOSX_DEPLOYMENT_TARGET=10.11
          wget https://github.com/libusb/libusb/releases/download/v1.0.25/libusb-1.0.25.tar.bz2
          tar -xvzf libusb-1.0.25.tar.bz2
          rm -rf libusb-1.0.25.tar.bz2
          cd libusb-1.0.25
          ./configure
          make
          mkdir ../output
          cp libusb/.libs/libusb-1.0.0.dylib ../output/libusb-1.0.0.dylib
          cd ..
      - name: Build dfu-util
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . --target libdfu-util
          install_name_tool -change /usr/local/lib/libusb-1.0.0.dylib @rpath/libusb-1.0.0.dylib libdfu-util.1.0.dylib
          cp libdfu-util.1.0.dylib ../output/libdfu-util.1.0.dylib
      - name: Upload results
        uses: actions/upload-artifact@v2
        with:
          name: LibUSB + LibDFU-Util libraries (MacOS)
          path: |
            output/libusb-1.0.0.dylib
            output/libdfu-util.1.0.dylib
          if-no-files-found: error
